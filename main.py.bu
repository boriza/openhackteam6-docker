#!flask/bin/python
import os
from flask import Flask, request, redirect, url_for
from werkzeug.utils import secure_filename

import pandas as pd
from sklearn import linear_model
import pickle

ALLOWED_EXTENSIONS = set(['txt', 'pdf', 'png', 'jpg', 'jpeg', 'gif'])


# creating and saving some model
# reg_model = linear_model.LinearRegression()
# reg_model.fit([[1.,1.,5.], [2.,2.,5.], [3.,3.,1.]], [0.,0.,1.])
# pickle.dump(reg_model, open('some_model.pkl', 'wb'))

app = Flask(__name__)

last_prediction = ""

@app.route('/isAlive')
def index():
    return "true"

@app.route('/prediction/api/v1.0/test', methods=['GET'])
def get_prediction():
    #feature1 = float(request.args.get('f1'))
    # feature2 = float(request.args.get('f2'))
    #loaded_model = pickle.load(open('team6_challenge3_rfc.pkl', 'rb'))
    #prediction = loaded_model.predict([[feature1]])
    return str("It works!")


def allowed_file(filename):
    return '.' in filename and \
           filename.rsplit('.', 1)[1].lower() in ALLOWED_EXTENSIONS

@app.route('/prediction/api/v1.0/gear', methods=['GET', 'POST'])
def upload_file():
    if request.method == 'POST':
        # try:
        # check if the post request has the file part

        # if 'file' not in request.files:
        #     flash('No file part')
        #     return redirect(request.url)

        file = request.files['file']

        # if user does not select file, browser also
        # submit an empty part without filename
        # if file.filename == '':
        #     flash('No selected file')
        #     return redirect(request.url)

        #return str("It also works!")

        #if file and allowed_file(file.filename):
        loaded_model = pickle.load(open('team6_challenge3_rfc.pkl', 'rb'))
        prediction = loaded_model.predict([[file.re]])

        #last_prediction = prediction

        #except requests.exceptions.RequestException as e:
        return str(prediction)

    if request.method == 'GET':
        return last_prediction

@app.errorhandler(500)
def handle_internal_error(e):
    #return render_template('500.html', error=e), 500
    return str(e)


if __name__ == '__main__':
    if os.environ['ENVIRONMENT'] == 'production':
        app.run(port=80,host='0.0.0.0')
    if os.environ['ENVIRONMENT'] == 'local':
        app.run(port=5000,host='0.0.0.0')

